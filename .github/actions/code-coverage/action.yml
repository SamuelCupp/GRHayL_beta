name: code-coverage
description: 'Uses gcovr and Codecov to generate code coverage report'
inputs:
  compiler:
    description: compiler for test
    required: true
    default: 'gcc'
  codecov_token:
    description: Github token needed for upload
    required: true

runs:
  using: "composite"
  steps:
    - if: runner.os == 'Linux' && inputs.compiler == 'gcc'
      run: |
        sudo apt-get install gcovr
        gcovr -r . --keep
      shell: bash

    ## This still doesn't generate expected cov. files
    #- if: runner.os == 'Linux' && inputs.compiler == 'clang'
    #  run: |
    #    sudo apt-get install gcovr
    #    gcovr -r .  --gcov-executable "llvm-cov-14 gcov" --keep
    #  shell: bash

    ## Try Intel's codecov tool? Not sure if this is compatible with gcovr
    #- if: runner.os == 'Linux' && inputs.compiler == 'intel'
    #  run: |
    #    sudo apt-get install gcovr
    #    gcovr -r . --keep
    #  shell: bash

    - if: runner.os == 'MacOS' && inputs.compiler == 'gcc'
      run: |
        brew install gcovr
        gcovr -r ./build --keep
      shell: bash

    #- if: runner.os == 'MacOS' && inputs.compiler == 'clang'
    #  run: |
    #    brew install gcovr
    #    gcovr -r . --gcov-executable "llvm-cov-14 gcov" --keep
    #  shell: bash

#    - uses: codecov/codecov-action@v3
      with:
          fail_ci_if_error: true
          token: ${{ inputs.codecov_token }}
#      env:
#        CODECOV_TOKEN: ${{ inputs.codecov_token }}
